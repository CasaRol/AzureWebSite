@{
    ViewData["Title"] = "Assignment and checklist";
}

<h2>@ViewData["Title"]</h2>

<h3>Task A</h3>
<h4>
    Imagine that an employer would like to hire you. The employer would like to see how well you
    understand MVC. The employer has given you a task. The task is for you to develop an ASP.NET
    Core 2.1 MVC Web App that contains new webpages that show the following:
</h4>

<h5>
    1: General description of your experiences in relation to software engineering, programming languages etc. and a brief resume/cv
    <span class="glyphicon glyphicon-check"></span>
</h5>

<h5>
    2: List of courses that you have taken during your bachelor program
    <span class="glyphicon glyphicon-check"></span>
</h5>


<h3><br />Task B</h3>

<h4>
    This aim of this task is to reflect on the fundamental aspects of ASP.NET Core 2.1 MVC. Provide
    responses to the following:
</h4>

<h5>
    1: Briefly explain the link between HTTP endpoint and the controller class.
    <span class="glyphicon glyphicon-check"></span>
</h5>

<center>
    <h5><b>ANSWER</b></h5>
    <h5>
        The HTTP endpoint is the link between the code and the page, roughly speaking. <br />
        The endpoint makes a call to the controller which has a public method (in order to even make the call from the webpage) <br />
        the method will then have a return to the specific view and load it in.
    </h5>
</center>

<h5>
    <br />2: Briefly describe scaffolding in the context of ASP.NET Core 2.1 MVC.
    <span class="glyphicon glyphicon-check"></span>
</h5>

<center>
    <h5><b>ANSWER</b></h5>
    <h5>
        Scaffolding is the lovely feature that makes webdvelopment a delight when using databases. <br />
        When a model has been written and the database has been migrated the scaffolding does the rest for you <br />
        It creates a controller and a view in order to link them to the Model made for setting the stage for the database attributes
    </h5>
</center>

<h5>
    <br />3: Explain the relationship between key files in the ASP.NET Core 2.1 MVC app:   <b>.cshtml, .cs, .csproj, .db</b> -files
</h5>

<center>
    <h5>
        <b>ANSWER</b>
    </h5>
    <h5>
        - <b>.cshtml</b> is the files that make up the visuals in the browser. All the view-files are in the format of .cshtml.<br />
        <br />- <b>.cs</b> is class-files. They can be in the instance of a controller which control which view to load in or it could be <br />
        in the instance of a model setting the attributes for the database. <br />
        <br />- <b>.csproj</b> refers to the entire project in C#. You could say it is the build-file for the project.<br />
        <br /> <b>.db</b> isn't in my projectfiles as far as I can see but i'd say that it's a database file by just looking at the abbreviation.<br />
        I'd think that this file is responsible for retrieving data from the database and append it to the view in order to load the data in to the browser.
    </h5>
</center>